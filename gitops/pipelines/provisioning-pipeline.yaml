apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: provisioning-pipeline
  namespace: hub-ns
spec:
  params:
    - default: create
      description: create or delete
      name: action
      type: string
    - default: pss
      name: department
      type: string
    - default: dc
      name: location
      type: string
    - default: ns
      name: type
      type: string
    - default: >-
        http://dashboard-hub-ns.apps.cluster-pdvxl.pdvxl.sandbox2343.opentlc.com/department/provision/commit
      name: callback_url
      type: string
  tasks:
    - name: ns-config
      params:
        - name: SCRIPT
          value: >-
            sed -e 's/DEPARTMENT/$(params.department)/g' -e
            's/LOCATION/$(params.location)/g' gitops/provisioning/ns.yaml | oc
            $(params.action) -f - -n openshift-gitops
        - name: VERSION
          value: latest
      runAfter:
        - git-clone-0tm
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: openshift-client
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      when:
        - input: $(params.type)
          operator: in
          values:
            - ns
      workspaces:
        - name: manifest_dir
          workspace: source
    - name: cluster-ns
      params:
        - name: SCRIPT
          value: oc new-project $(params.department)-cluster
        - name: VERSION
          value: latest
      runAfter:
        - git-clone-0tm
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: openshift-client
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      when:
        - input: $(params.type)
          operator: in
          values:
            - cluster
      workspaces:
        - name: manifest_dir
          workspace: source
    - name: callback
      params:
        - name: department
          value: $(params.department)
        - name: callback_url
          value: $(params.callback_url)
        - name: action
          value: $(params.action)
        - name: location
          value: $(params.location)
      runAfter:
        - cluster
        - app-placement
      taskRef:
        kind: Task
        name: provisioning-callback
      workspaces:
        - name: workspace
          workspace: source
    - name: secrets
      params:
        - name: SCRIPT
          value: >-
            oc get secret cluster-secrets -n hub-ns -o
            jsonpath='{.data.secrets}' | base64 --decode | sed -e
            's/NAMESPACE/$(params.department)/g' | oc create -f - -n
            $(params.department)-cluster
        - name: VERSION
          value: latest
      runAfter:
        - cluster-ns
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: openshift-client
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      when:
        - input: $(params.type)
          operator: in
          values:
            - cluster
      workspaces:
        - name: manifest_dir
          workspace: source
    - name: cluster
      params:
        - name: SCRIPT
          value: >-
            oc get secret cluster-secrets -n hub-ns -o
            jsonpath='{.data.cluster}' | base64 --decode | sed -e
            's/NAMESPACE/$(params.department)/g' | oc create -f - -n
            $(params.department)-cluster
        - name: VERSION
          value: latest
      runAfter:
        - cluster-set
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: openshift-client
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      when:
        - input: $(params.type)
          operator: in
          values:
            - cluster
      workspaces:
        - name: manifest_dir
          workspace: source
    - name: cluster-set
      params:
        - name: SCRIPT
          value: >-
            oc get secret cluster-secrets -n hub-ns -o
            jsonpath='{.data.cluster-set}' | base64 --decode | sed -e
            's/NAMESPACE/$(params.department)/g' | oc create -f - 
        - name: VERSION
          value: latest
      runAfter:
        - secrets
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: openshift-client
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      when:
        - input: $(params.type)
          operator: in
          values:
            - cluster
      workspaces:
        - name: manifest_dir
          workspace: source
    - name: db-config
      params:
        - name: SCRIPT
          value: >-
            sed -e 's/DEPARTMENT/$(params.department)/g' -e
            's/LOCATION/$(params.location)/g' gitops/db/applicationset-db.yaml |
            oc $(params.action) -f - -n openshift-gitops
        - name: VERSION
          value: latest
      runAfter:
        - ns-config
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: openshift-client
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      when:
        - input: $(params.type)
          operator: in
          values:
            - ns
      workspaces:
        - name: manifest_dir
          workspace: source
    - name: app-placement
      params:
        - name: SCRIPT
          value: >-
            kubectl patch placement $(params.department)-placement --type "json"
            -p
            '[{"op":"add","path":"/spec/predicates/0/requiredClusterSelector/labelSelector/matchExpressions/0/values/1","value":"$(params.location)"}]'
            -n openshift-gitops
        - name: VERSION
          value: latest
      runAfter:
        - db-config
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: openshift-client
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      when:
        - input: $(params.type)
          operator: in
          values:
            - ns
      workspaces:
        - name: manifest_dir
          workspace: source
    - name: git-clone-0tm
      params:
        - name: CRT_FILENAME
          value: ca-bundle.crt
        - name: HTTP_PROXY
          value: ''
        - name: HTTPS_PROXY
          value: ''
        - name: NO_PROXY
          value: ''
        - name: SUBDIRECTORY
          value: ''
        - name: USER_HOME
          value: /home/git
        - name: DELETE_EXISTING
          value: 'true'
        - name: VERBOSE
          value: 'false'
        - name: SSL_VERIFY
          value: 'true'
        - name: URL
          value: https://github.com/gestrem/dora-demo-rh
        - name: REVISION
          value: main
        - name: REFSPEC
          value: ''
        - name: SUBMODULES
          value: 'true'
        - name: DEPTH
          value: '1'
        - name: SPARSE_CHECKOUT_DIRECTORIES
          value: ''
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      workspaces:
        - name: output
          workspace: source
  workspaces:
    - name: source
  finally: []
